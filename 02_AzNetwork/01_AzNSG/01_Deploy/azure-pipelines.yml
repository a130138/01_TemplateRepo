# PowerShell:  Azure NSG Deploy POC
# About:  Creates new repo folder with updated json variables, deploys to Az Portal
# Required:  Update variables section prior to deploy

variables:
##########"Azure Info"######################
  - name: AzCategory
    value: AzStorage
    # Azure Cateogory; i.e. - AzStorage, AzNSG, AzFirewall, etc
  - name: AzItem
    value: AzStorageAccountContainer
    # Azure Item for category entered; i.e. - AzStorageAccount, AzNSG, etc
  - name: AzRepoFolder
    value: $(System.DefaultWorkingDirectory)\01_$(AzCategory)\01_$(AzItem)
    # Azure repo folder path based on AzCategory/AzItem; i.e. - $(System.DefaultWorkingDirectory)\01_$(AzCategory)\01_$(AzItem)
  - name:  AzDeployJson
    value: $(AzRepoFolder)\01_Deploy\$(AzItem).$(AzStorageName).$(Build.BuildNumber)\azuredeploy.json
    # Setup of new json file
##########"Json & ARM Variables"##################
  - name: AzStorageName
    value: contain3
    # name of new Azure storage account; i.e. - 'azstorageacct' (must be lowercase/no special chars)
  - name: AzContainerName
    value: cont1
  - name: AzTagEnv
    value: POC
    # Azure 'Environment' tag
  - name: AzTagOwn
    value: joseph cropper
    # Azure 'Owner' tag
  - name: AzSkuName
    value: Premium_LRS
    # Azure storage sku name; i.e. - 'Premium_LRS'
  - name: AzSkuTier
    value: Premium
    # Azure storage tier; i.e. - 'Premium'
  - name: AzLoc
    value: East US 2
    # Azure location; i.e. - 'East US 2'
  - name: AzKind
    value: Storage
    # Azure storage account type; i.e. - 'Storage'
  - name: AzArmConnection
    value: Dev_Azure_10002_CloudSandbox3(239c71f8-a24e-41d1-96f6-b4f834a1f615)
    # Azure ARM connection; i.e. - 'Dev_Azure_10002_CloudSandbox3(239c71f8-a24e-41d1-96f6-b4f834a1f615)'
  - name: AzRgName
    value: JoePOC1
    # Azure resource group name
##########"Repo Info"########################
  - name: GitRepoBranch
    value: _a130138_01_TemplateRepo
    # Repo branch main/master name; i.e. - '_a130138_01_TemplateRepo'
  - name: GitUserName
    value: a130138_tr1
    # Repo user name; i.e. - 'a130138_tr1'
  - name: GitUserEmail
    value: a130138_tr1@amerisourcebergen.com
    # Repo user email; i.e. - 'a130138_tr1@amerisourcebergen.com'

trigger:
  - none

pool:
  vmImage: windows-latest

steps:
- checkout: self
  persistCredentials: true
- task: PowerShell@2
  inputs:
    targetType: inline
    script: |
      # Inject variables from above #
      Write-Host "##########################################"
      Write-Host "Update json variables"
      (Get-Content $(AzDeployJson)) | Foreach-Object {
          $_ -replace '@@AzStorageName@@','$(AzStorageName)' `
            -replace '@@AzTagEnv@@','$(AzTagEnv)' `
            -replace '@@AzTagOwn@@','$(AzTagOwn)' `
            -replace '@@AzSkuName@@','$(AzSkuName)' `
            -replace '@@AzSkuTier@@','$(AzSkuTier)' `
            -replace '@@AzLoc@@','$(AzLoc)' `
            -replace '@@AzKind@@','$(AzKind)' `
            -replace '@@AzContainerName@@','$(AzContainerName)' `
          } | Set-Content $(AzDeployJson)
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: Resource Group
      # Options:  'Resource Group','Management Group', or 'Subscription'
    azureResourceManagerConnection: '$(AzArmConnection)'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '$(AzRgName)'
    location: '$(AzLoc)'
    templateLocation: 'Linked artifact'
      # options:  Linked artifact, URL of the file; cannot set variable(s)
    csmFileLink: $(AzDeployJson)
      # Location of azuredeploy.json; use 'raw' link for github repo & URL of the file
    deploymentMode: Incremental
    # Options:  'Incremental', 'Validation' or 'Complete'
    deploymentName: '$(deploymentName)'
- task: CmdLine@2
  inputs:
    script: |
      echo "Git push"
      cd $(System.DefaultWorkingDirectory)\$(GitRepoBranch)
      git init
      git config --global user.email "$(GitUserEmail)"
      git config --global user.name "$(GitUserName)"
      git fetch
      git checkout -b main
      git add .
      git commit -m "My commit message"
      git push origin HEAD:main