# Azure Storage Acct Deploy_V2

variables:
- group: "AzVarGroupOne"

- name: Timestamp
  value: $(Get-Date -Format yyyyMMdd)

trigger:
  - none

name: $(date:yyyyMMdd)$(rev:.r)

pool:
  vmImage: windows-latest

steps:
- checkout: self
  persistCredentials: true
# New folder with template file copy
- task: PowerShell@2
  inputs:
   targetType: inline
   script: |
      New-Item -Path $(AzRepoFolder) -ItemType Directory -Name $(AzItem).$(Timestamp)
      Copy-Item $(AzRepoFolder)\$(AzTemplateFolder)\azuredeploy.json -Destination $(AzRepoFolder)\$(AzItem).$(Timestamp)
      (Get-Content $(AzDestinationFileJSON)) | Foreach-Object { 
          $_ -replace '@@AzName@@', '$(AzName)' `
             -replace '@@AzTagEnv@@', 'POC' `
             -replace '@@AzTagOwn@@', 'jc' `
             -replace '@@AzSkuName@@', 'Premium_LRS' `
             -replace '@@AzSkuTier@@','Premium' `
             -replace '@@AzLoc@@','East US 2' `
             -replace '@@AzKind@@','Storage' `
          } | Set-Content $(AzDestinationFileJSON)
      Get-Content $(AzDestinationFileJSON)
# Update Repo
- task: CmdLine@2
  inputs:
    script: |
      git init
      git config --global user.email "a130138_tr1@amerisourcebergen.com"
      git config --global user.name "a130138_tr1"
      git fetch
      git checkout -b main
      git add .
      git commit -m "My commit message"
      git push origin HEAD:main
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)
    artifactName: AzArtifact.$(AzItem)

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "################################"
      Write-Host Build.SourcesDirectory 
        Get-ChildItem $(Build.SourcesDirectory) -Recurse
      Write-Host "################################"
      
      Write-Host "################################"
      Write-Host System.DefaultWorkingDirectory
      Get-ChildItem $(System.DefaultWorkingDirectory) -Recurse

      Write-Host "################################"
      Write-Host Pipeline.Workspace
      Get-ChildItem $(Pipeline.Workspace) -Recurse
      Write-Host "################################"

